---

services: docker

env:
  - distro: ubuntu1604
  - distro: ubuntu1404
  - distro: centos7
  - distro: debian8
  - distro: fedora24

before_install:
  # Pull container.
  - 'docker pull geerlingguy/docker-${distro}-ansible:latest'

script:
  # Configure test script so we can run extra tests after playbook is run.
  - export container_id=$(date +%s)
  - export cleanup=false

  # Download test shim.
  - wget -O ${PWD}/tests/test.sh https://gist.githubusercontent.com/dm/64a7d3059090d2e833ed4658ca399d91/raw/
  - chmod +x ${PWD}/tests/test.sh

  # Run tests.
  - ${PWD}/tests/test.sh

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check -vvvv'

  # Test role.
  - 'docker exec "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml -vvvv'

  # Test whether packages are installed as specified.
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm pip list installed | grep -e '^flask.*0\.12\.2.*$'
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm pip list installed | grep '^django'
  - docker exec --tty "$(cat ${container_id})" env TERM=xterm pip list installed | grep '^docker'

  # Test role idempotence.
  # - idempotence=$(mktemp)
  # - docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml | tee -a ${idempotence}
  # - >
  #   tail ${idempotence}
  #   | grep -q 'changed=0.*failed=0'
  #   && (echo 'Idempotence test: pass' && exit 0)
  #   || (echo 'Idempotence test: fail' && exit 1)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
